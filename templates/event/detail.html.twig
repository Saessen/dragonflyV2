{% extends 'base.html.twig' %}

{% block title %}Event index{% endblock %}

{% block body %}
    
<div class="container justify-content-start">
    <div class="row ">
    <div class="col-12 col-lg-4">
    {# STRUCTURE CARD #}
    {# Début nav entre les pages #}
    <div class="card text-center " style="width: 1200px;">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link " href="{{ path('event_new') }}">Créer un event</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" aria-current="true" href="#">Tous les event</a>
            </li>
            <li class="nav-item">
                <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Mes event</a>
            </li>
            </ul>
        </div>
        <div class="card-body">
            <h5 class="card-title">Tous les event</h5>
        {# fin nav entre les pages #}
            
            {# Début recherche localisation des event #}
                {# AFFICHEGAE MAP #}
                <div id="mapId" class="4" style="width: 28rem;height : 18rem"></div>
                
                
                
                {# Affichage de l'évenement #}
                <div class="border">
                <div class="d-flex justify-content-between align-item-center">
                    <h5 class="">{{ event.nom |upper}}</h5>
                    
                    
                </div>
                <p class="text-start">Catégorie: {{ event.categorie }}</p>
                <p class="text-start">Date: {{ event.dateDebut ? event.dateDebut|date('d-m-Y') : '' }}</p>
                <p class="text-start">Participants minimum: {{ event.persMin}}
                {% if event.persMax is defined and event.persMax is not null %}
                 <p class="text-start"> {{"Participants maximum : " ~ event.persMax }} </p>
                {% endif %}
                
                <p class="text-start">Adresse: {{ event.rue }}{{ event.codePostal }}{{ event.ville }}</p>
                <p class="text-start">Accessibilité: {{ event.access }}</p>
                <p class="text-start">Description: {{ event.message }}</p>
                <a href="{{ path('event_index') }}" class="btn btn-outline-secondary">Retour à la liste</a>
                </div>
            
        </div>
    </div>
</div>
{# FIN CARD #}
    </div>
    </div>
    {% block javascripts %}
     
    <!-- FICHIER JS LEAFLET -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        {# MES VARIABLES #}
        let centre ={lat: 47.232, lng: 	2.421}; // coordonnées lat lng du centre de la france
        let map = L.map('mapId').setView( centre, 5); // zoom a 5 pr visualiser la carte de france en entière

        // ajout de jeu de tuiles: plusieurs attributs:
        // FCTION TILELAYER
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        distance.addEventListener("change", function(){
        d = this.value 

        valeurDistance.innerText = d + " km"
        if(circle!=null){
            console.log("redraw circle");
            circle.setRadius(d*1000);
        }
    })

        {# RECUPERATION DE L ADRESSE ENTRE DANS LA BARRE DE RECHERCHE #}
        let geocodebtn = document.getElementById('geocode');
        geocodebtn.addEventListener('click', function(){
            let adresse = document.getElementById('adresse').value;
            {# console.log(adresse); #}
            geoCode(adresse);
        });

        async function geoCode(adresse, e){
            let url = `https://nominatim.openstreetmap.org/search/?format=json&q=${adresse}`;
            let resp =await fetch(url);
            let datas = await resp.json();
            let lat =parseFloat(datas[0].lat).toFixed(4);
            let lng =parseFloat(datas[0].lon).toFixed(4); // attention ac ce fournisseur la lng est une lon
            //////////LAT + LNG DS FORMULAIRE DE CREATION
            document.getElementById("event_latitude").value = lat;
            document.getElementById("event_longitude").value = lng;
            //ajout d'un marker
            L.marker([lat, lng]).addTo(map) //ANCHOR mettre un popup sur le maker   
        } 
        //FIN RECUP ADRESSE

        {# GEOLOCALISATION AU BTN #}
        let localisation = document.getElementById('localisation');
        localisation.addEventListener('click', function(){
            // console.log('dis mois que ca marche..')
            localisation.disabled = true ; //désactiver le bouton une fois cliquer pr éviter que le user click 50fois si le chargement prend du tps
            map.on('locationfound', onLocationFound);
            map.on('locationerror', onLocationError);

            map.locate({setView:true, maxZoom: 18}) //fction de leaflet qui lance la localisation et appelera nos fctions/ setView:true pr recentrer sur cette localisation
        });

        function onLocationFound(e){
            document.getElementById("event_latitude").value = e.latlng.lat;
            document.getElementById("event_longitude").value = e.latlng.lng;
            L.marker(e.latlng).addTo(map).bindPopup("vous êtes ici!").openPopup(); //récupérer les données sous forme d'objet pr pouvoir les réutiliser 
            
        }
        //fction indiquant erreur dans la localisation et réactivation du btn
        function onLocationError(e){
            localisation.disabled = false;
            alert(e.message);
        }
        {# FIN GEOLOCALISATION AU BTN #}

        {# LOCALISATION AU CLICK SUR MAP #}
               map.on('click', function(e){
            
            let lat = parseFloat(e.latlng.lat).toFixed(4);
            let lng = parseFloat(e.latlng.lng).toFixed(4);
            document.getElementById("event_latitude").value = lat;
            document.getElementById("event_longitude").value = lng;
            L.marker([lat, lng]).addTo(map);
            geoDecode(lat, lng);
        });

        async function geoDecode(lat, lng){
            let resultat = document.getElementById("resultat");
            resultat.innerText = "Chargement...";
            //appel nominatim
            let resp = await fetch (`http://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`); //précise reverse pour avoir l'inverse 
            let datas =await resp.json();
            if(datas.display_name){
                console.log(datas.display_name);
                resultat.innerText = "Vos données sont transmises auformulaire avec succès";
                ///////////////////////////////////////AFFICHAGE CERCLE SUR UN RAYON DE 1KM/////////////////////////////////////
                circle = L.circle(datas, {
                color: '#0000ff',
                radius: 1000 * d /// en mètre
                }).addTo(map);
            }else{
                resultat.innerText ='non trouvé';

            }
        }

    {% endblock %}
    </script>

{% endblock %}

                
                
                
                
              
                {# A GARDER #}
                {#
                <td>{{ event.longitude }}</td> #}
                {# <a href="{{ path('event_show', {'id': event.id}) }}">show</a>
                <a href="{{ path('event_edit', {'id': event.id}) }}">edit</a> #}