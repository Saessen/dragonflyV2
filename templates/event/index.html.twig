{% extends 'base.html.twig' %}

{% block title %}Event index{% endblock %}

{% block body %}
    
<div class="container justify-content-start">
    <div class="row ">
    <div class="col-12 col-lg-4">
    {# STRUCTURE CARD #}
    {# Début nav entre les pages #}
    <div class="card text-center " style="width: 1200px;">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link " href="{{ path('event_new') }}">Créer un event</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" aria-current="true" href="#">Tous les event</a>
            </li>
            <li class="nav-item">
                <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Mes event</a>
            </li>
            </ul>
        </div>
        <div class="card-body">
            <h5 class="card-title">Tous les event</h5>
        {# fin nav entre les pages #}
            
            {# Début recherche localisation des event #}
                {# AFFICHEGAE MAP #}
                <div id="mapId" class="4" style="width: 28rem;height : 18rem"></div>
                {# AFFICHAGE BARRE DE RECHERCHE ADRESSE #}
                <p class="text-start">
                    <input class="geo mt-1" id="adresse" value="">
                    <button type="button" class="btn btn-outline-secondary "id="geocode">RECHERCHER</button>
                </p>
                {# CURSEUR DISTANCE #}
                <p class="text-start">
                    <label for="distance">Distance (de 1 à 100km): </label>
                    <input type="range" min="1" max="100" id="distance">
                </p>
                <p class="text-start" id="valeurDistance"></p>
                {# AFFICHAGE BOUTON GEOLOCALISATION #}
                <p class="text-start">
                <button type="button" class="btn btn-outline-secondary mt-2"id="localisation">JE VEUX ETRE GEOLOCALISE</button>
                </p>
                <p id="resultat"></p>
                {# Fin recherche localisation des event #}
                {% for event in events %}
                {# Affichage des évenements #}
                <div class="border">
                <div class="d-flex justify-content-between align-item-center">
                    <h5>{{ event.nom |upper}}</h5>
                    {# ANCHOR ROUTE A MODIFIER => DETAIL/EVENT #}
                    <a href="{{path('event_detail', {'id': event.id })}}"><button type="button" class="btn btn-outline-secondary "id="geocode">VOIR</button></a>
                </div>
                <p class="text-start">Catégorie: {{ event.categorie }}</p>
                <p class="text-start">Date: {{ event.dateDebut ? event.dateDebut|date('d-m-Y') : '' }}</p>
                <p class="text-start">Lieu: {{ event.ville }}</p>
                <div class="d-none">
                <p id="lat".class="text-end">{{event.latitude}}</p>
                <p id="lng".class="text-end">{{event.longitude}}</p>
                </div>
                </div>
            {% endfor %}
        </div>
    </div>
</div>
{# FIN CARD #}
    </div>
    </div>
    {% block javascripts %}
     
    <!-- FICHIER JS LEAFLET -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        {# MES VARIABLES #}
        let centre ={lat: 47.232, lng: 	2.421}; // coordonnées lat lng du centre de la france
        let map = L.map('mapId').setView( centre, 5); // zoom a 5 pr visualiser la carte de france en entière
        var lat2 = document.getElementById('lat').innerText;
        var lng2 = document.getElementById('lng').innerText;
        {# console.log (lat);
        console.log (lng); #}
       
        

        // ajout de jeu de tuiles: plusieurs attributs:
        // FCTION TILELAYER
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);


        ////AFFICHAGE DE TOUS LES MARKERS DE TOUS LES EVENTS ANCHOR
        let event = [lat2, lng2];
        console.log(events);
        {# ANCHOR probleme boucle  #}
        {# events.forEach((event)=>{
            console.log(event);
        }); #}
        {# for (let i =0; i< this.length; i++){
            L.marker(events).addTo(map);
        } #}
        {# L.marker(events).addTo(map); #}
        
        {# DISTANCE #}
        distance.addEventListener("change", function(){
        d = this.value 

        valeurDistance.innerText = d + " km"
        if(circle!=null){
            console.log("redraw circle");
            circle.setRadius(d*1000);
        }
    });


////////////////////////// REMPLIR L'ADRESSE ET AFFICHER LE MARKER CORRESPONDANT///////////////////////////////////////////
    //ecouteur sur le btn =>récupère l'adresse => service de géocodage
    let geocodebtn = document.getElementById('geocode');
        geocodebtn.addEventListener('click', function(){
            let adresse = document.getElementById('adresse').value;
            console.log(adresse);
            geoCode(adresse);
        });

        async function geoCode(adresse, e){
            let url = `https://nominatim.openstreetmap.org/search/?format=json&q=${adresse}`;
            let resp =await fetch(url);
            let datas = await resp.json();
            console.log(datas);
            let lat =parseFloat(datas[0].lat).toFixed(4);
            let lng =parseFloat(datas[0].lon).toFixed(4); // attention ac ce fournisseur la lng est une lon
            console.log(lat, lng); 
            let donneesAdresse = document.getElementById("donneesAdresse");
            donneesAdresse.innerText = "Ici la latitude : "+ lat +" et la longitute: " +lng+" de l'adresse entré dans la barre de recherche";
            //ajout d'un marker
            circle = L.circle(datas, {
                color: '#0000ff',
                radius: 1000 * d /// en mètre
                }).addTo(map);
            map.panTo([lat, lng], 18); //JE VEUX ZOOMER
            
        }
        


////////////////////////////////CLICK SUR MAP => RECUPERER ADRESSE ET L'AFFICHER
        map.on('click', function(e){
            
            let lat = parseFloat(e.latlng.lat).toFixed(4);
            let lng = parseFloat(e.latlng.lng).toFixed(4);
            console.log(lat, lng);

            L.marker([lat, lng]).addTo(map);
            

            geoDecode(lat, lng);
        });
        async function geoDecode(lat, lng){
            let resultat = document.getElementById("resultat");
            resultat.innerText = "patience ca arrive!!!";
            //appel nominatim
            let resp = await fetch (`http://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`); //précise reverse pour avoir l'inverse 
            let datas =await resp.json();
            console.log(datas); //display name + adresse
            if(datas.display_name){
                resultat.innerText = datas.display_name + " latitude : "+datas.lat +" longitude: "+ datas.lon;
                console.log(datas.display_name);
                ///////////////////////////////////////AFFICHAGE CERCLE SUR UN RAYON DE 1KM/////////////////////////////////////
                circle = L.circle(datas, {
                color: '#0000ff',
                radius: 1000 * d /// en mètre
                }).addTo(map);

            }else{
                resultat.innerText ='non trouvé';

            }
        }


        
//////////////////////////GET MY POSITION AU BTN RECUPERE LAT+LNG ET LES AFFICHER//////////////////////////////////////////
        let localisation = document.getElementById('localisation');
        localisation.addEventListener('click', function(){
            // console.log('dis mois que ca marche..')
            localisation.disabled = true ; //désactiver le bouton une fois cliquer pr éviter que le user click 50fois si le chargement prend du tps
            map.on('locationfound', onLocationFound);
            map.on('locationerror', onLocationError);

            map.locate({setView:true, maxZoom: 18}) //fction de leaflet qui lance la localisation et appelera nos fctions/ setView:true pr recentrer sur cette localisation
        });

        function onLocationFound(e){
            
            
            console.log(e.latlng);
            let ici = document.getElementById("ici");
            ici.innerText = "Voici vos coordonnées : "+ e.latlng;
            circle = L.circle(datas, {
                color: '#0000ff',
                radius: 1000 * d /// en mètre
                }).addTo(map).binPopup("Vous êtes ici");
        }
        //fction indiquant erreur dans la localisation et réactivation du btn
        function onLocationError(e){
            localisation.disabled = false;
            alert(e.message);
        }

        </script>
    {% endblock %}


{% endblock %}

                
                
                
                
              
                {# A GARDER #}
                {#
                <td>{{ event.longitude }}</td> #}
                {# <a href="{{ path('event_show', {'id': event.id}) }}">show</a>
                <a href="{{ path('event_edit', {'id': event.id}) }}">edit</a> #}