{% extends 'base-front.html.twig' %}

{% block title %}Event index{% endblock %}

{% block body %}
    
<div class="container justify-content-start">
    <div class="row ">
    <div class="col-12 col-lg-4">
    {# STRUCTURE CARD #}
    {# D√©but nav entre les pages #}
    <div class="card text-center " style="width: 1200px;">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link " href="{{ path('event_new') }}">Cr√©er un event</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" aria-current="true" href="#">Tous les event</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('user_showEvent') }}" tabindex="-1" aria-disabled="true">Mes event</a>
                {# <a class="nav-link" href="{{ path('event_index') }}" tabindex="-1" aria-disabled="true">Mes event</a> #}
            </li>
            </ul>
        </div>
        <div class="card-body">
            <h5 class="card-title">Tous les event</h5>
        {# fin nav entre les pages #}
            
            {# D√©but recherche localisation des event #}
                {# AFFICHEGAE MAP #}
                <div id="mapId" class="4" style="width: 28rem;height : 18rem"></div>
                {# AFFICHAGE BARRE DE RECHERCHE ADRESSE #}
                <p class="text-start">
                    <input class="geo mt-1" id="adresse" value="">
                    <button type="button" class="btn btn-outline-secondary "id="geocode">RECHERCHER</button>
                </p>
                {# CURSEUR DISTANCE #}
                <p class="text-start">
                    <label for="distance">Distance (de 1 √† 100km): </label>
                    <input type="range" min="1" max="100" id="distance">
                </p>
                <p class="text-start" id="valeurDistance"></p>
                {# AFFICHAGE BOUTON GEOLOCALISATION #}
                <p class="text-start">
                <button type="button" class="btn btn-outline-secondary mt-2"id="localisation">JE VEUX ETRE GEOLOCALISE</button>
                </p>
                <p id="resultat"></p>
                {# Fin recherche localisation des event #}
                {% for event in events %}
                {# Affichage des √©venements #}
                <div class="border">
                <div class="d-flex justify-content-between align-item-center">
                    <h5>{{ event.nom |upper}}</h5>
                    {# ANCHOR ROUTE BTN #}
                    


                    <a href="{{path('event_detail', {'id': event.id })}}"><button type="button" class="btn btn-warning "id="geocode">VOIR</button></a>
                    <a href="{{ path('messagerie_new', {id: event.id}) }}" class="btn btn-warning"><i class="far fa-comments"></i></a>
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    Je m'inscris!
                    </button>

                    <!-- Modal -->
                    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Inscription {{ event.nom }}</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Je confirme mon inscription pour l'√©venement {{ event.nom}} le {{event.dateDebut ? event.dateDebut|date('d-m-Y') : '' }} √† {{event.ville}}
                        </div>
                        <div class="modal-footer">
                           
                             <a href="{{path('event_detail', {'id': event.id })}}"><button type="button" class="btn btn-warning "id="geocode">Voir</button></a>
                            <button type="button" class="btn btn-success "><a href="{{ path('event_subscribe', {id: event.id}) }}" class="text-decoration-none text-white">Confirmation</a></button>
                             <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                        </div>
                        </div>
                    </div>
                    </div>

                </div>
                <p class="text-start">Cat√©gorie: {{ event.categorie }}</p>
                <p class="text-start"><i class="text-warning fas fa-calendar-alt"></i> {{ event.dateDebut ? event.dateDebut|date('d-m-Y') : '' }}</p>
                <p class="text-start"><i class=" text-warning fas fa-map-pin"></i> {{ event.ville }}</p>
                <div class="d-none">
                <p id="lat".class="text-end">{{event.latitude}}</p>
                <p id="lng".class="text-end">{{event.longitude}}</p>
                </div>
                </div>
            {% endfor %}
        </div>
    </div>
</div>
{# FIN CARD #}
    </div>
    </div>
    {% block javascripts %}
       <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
        <script>
        var d = 0;
        var circle;
        var centre ={lat: 45.77668, lng: 3.07722}; // Lat, Lng
        var distance = document.querySelector("#distance");
        var map = L.map('mapId').setView( centre, 4.5); // 13 correspond au zoom de base sur la carte
        L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
        maxZoom: 17,
        //attribution: 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'
        }).addTo(map);
        circle = L.circle([45.3870, 3.3084], {
            color: '#ff000000',
            radius: 1000 * d /// en m√®tre
        });
        circle.addTo(map); 
        {# DISTANCE #}
        distance.addEventListener("change", function(){
            d = this.value 
            valeurDistance.innerText = d + " km"
            if(circle!=null){
                console.log("redraw circle");
                circle.setRadius(d*1000);
            }
        });

        ////////////////////////// REMPLIR L'ADRESSE ET AFFICHER LE MARKER CORRESPONDANT///////////////////////////////////////////
    //ecouteur sur le btn =>r√©cup√®re l'adresse => service de g√©ocodage
    var geocodebtn = document.getElementById('geocode');
        geocodebtn.addEventListener('click', function(){
            let adresse = document.getElementById('adresse').value;
            // console.log(adresse);
            geoCode(adresse);
        });

        async function geoCode(adresse, e){
            let url = `https://nominatim.openstreetmap.org/search/?format=json&addressdetails=1&q=${adresse}`;
            let resp =await fetch(url);
            let datas = await resp.json();
            console.log(datas);
            var lat =parseFloat(datas[0].lat).toFixed(4);
            var lng =parseFloat(datas[0].lon).toFixed(4); // attention ac ce fournisseur la lng est une lon
            console.log(lat, lng);            

            ///ANCHOR PROBLEME: MAP.PANTO ESSAI FLYTO ECHEC AUSSIüò§
            {# lien doc: https://leafletjs.com/reference-1.7.1.html#map-option #}
            //ajout d'un marker
            L.marker([lat, lng]).addTo(map); ///////////////////////////////PROBLEME ANCHOR le point s'affiche que si il est dans la vue de la carte obliger de d√©zoomer pour le voir
            {# map.panTo([lat, lng], 10);/////////////////YOUPI r√®gle le probl√®me pr√©c√©dent #}
          
            {# ANCHOR d is not defined #}
            circle.setLatLng([lat, lng]);
            circle.setRadius(distance.value*1000);
            circle.setStyle({'color': '#0000FFFF'});
        }

        {# GEOLOCALISATION AU BTN #}
        var localisation = document.getElementById('localisation');
        localisation.addEventListener('click', function(){
            // console.log('dis mois que ca marche..')
            localisation.disabled = true ; //d√©sactiver le bouton une fois cliquer pr √©viter que le user click 50fois si le chargement prend du tps
            map.on('locationfound', onLocationFound);
            map.on('locationerror', onLocationError);

            map.locate({setView:true, maxZoom: 11}) //fction de leaflet qui lance la localisation et appelera nos fctions/ setView:true pr recentrer sur cette localisation
        });
{# ANCHOR LE popup NE S OUVRE PAS POURQUOI???????????? #}
        function onLocationFound(e){
            console.log(e);
            //ANCHOR  a commenter une fois le cercle fonctionnel
            var m = L.marker(e.latlng).addTo(map); //r√©cup√©rer les donn√©es sous forme d'objet pr pouvoir les r√©utiliser   
            var popUp = L.popup().setLatLng(e.latlng).setContent('Test').openOn(map);
            m.bindPopup(popUp).openPopup();
            circle.setLatLng([e.latlng]);
            circle.setRadius(distance.value*1000);
            circle.setStyle({'color': '#0000FFFF'});
            
        }
        //fction indiquant erreur dans la localisation et r√©activation du btn
        function onLocationError(e){
            localisation.disabled = false;
            alert(e.message);
        }
        {# FIN GEOLOCALISATION AU BTN #}

        ///////CLICK SUR MAP///////
        map.on('click', function(e){
            
            let lat = parseFloat(e.latlng.lat).toFixed(4);
            let lng = parseFloat(e.latlng.lng).toFixed(4);
            console.log(lat, lng);
            
            L.marker([lat, lng]).addTo(map); //ANCHOR  a commenter une fois la solution du cercle trouv√©e
            geoDecode(lat, lng);
        });

        async function geoDecode(lat, lng){
            //appel nominatim
            let resp = await fetch (`http://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`); //pr√©cise reverse pour avoir l'inverse 
            let datas =await resp.json();
            {# ANCHOR LE CERCLE NE FCTIONNE PAS #}
            console.log(datas); 
            circle.setLatLng([lat, lng]);
            circle.setRadius(distance.value*1000);
            circle.setStyle({'color': '#0000FFFF'});
            

        }

        </script>
    {% endblock %}


{% endblock %}

                
                
                
                
              
                {# A GARDER #}
                {#
                <td>{{ event.longitude }}</td> #}
                {# <a href="{{ path('event_show', {'id': event.id}) }}">show</a>
                <a href="{{ path('event_edit', {'id': event.id}) }}">edit</a> #}